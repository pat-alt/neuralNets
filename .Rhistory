knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(data.table)
knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(data.table)
kable(head(fread("data/data.txt")))
kable(head(fread("data/data.txt")), col.names = c("Review", "Label"))
knitr::opts_chunk$set(echo = FALSE)
library(kableExtra)
library(data.table)
dt_pred <- fread("predictions.csv")
dt_pred
dt_pred <- fread("predictions.csv")[,V1:=NULL]
cor(dt_pred$pred_cnn, dt_pred$pred_rnn)
round(cor_models,2)
cor_models <- cor(dt_pred$pred_cnn, dt_pred$pred_rnn)
round(cor_models,2)
library(ggwordcloud)
library(tidytext)
unnest_tokens(dt_pred$sentence)
dt %>%
tidytext::unnest_tokens(word, text) %>%
dplyr::anti_join(stop_words)
dt_pred %>%
tidytext::unnest_tokens(word, text) %>%
dplyr::anti_join(stop_words)
?unnest_tokens
dt_pred %>%
tidytext::unnest_tokens(word, text)
dt_pred %>%
tidytext::unnest_tokens(word, sentences)
dt_pred
dt_pred
dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot
dt_plot <- melt(
dt_plot,
id.vars = "word",
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot
unique(dt_plot[,.(.N, pred=sentiment), by=.(word)])
dt_plot <- unique(dt_plot[,.(.N, pred=sentiment), by=.(word)])
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot <- melt(
dt_plot,
id.vars = "word",
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, pred=sentiment, model=model), by=.(word)])
dt_plot
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "lightblue")
) +
facet_grid(
cols = vars(model)
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=sentiment, model=model), by=.(word)])
library(ggwordcloud)
library(tidytext)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot <- melt(
dt_plot,
id.vars = "word",
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=sentiment, model=model), by=.(word)])
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "lightblue")
) +
facet_grid(
cols = vars(model)
)
dt_plot
library(ggwordcloud)
library(tidytext)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, true=true, sentiment=sentiment, model=model), by=.(word)])
dt_plot
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
# scale_colour_manual(
#   guide=FALSE,
#   values = c("coral", "lightblue")
# ) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
?geom_text_wordcloud
dt_plot
library(ggwordcloud)
library(tidytext)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, true=true, sentiment=mean(sentiment), model=model), by=.(word)])
dt_plot
setorder(dt_plot, true, model, -N)
dt_plot <- head(dt_plot, input$max_words)
dt_plot
library(dplyr)
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, true=true, sentiment=mean(sentiment), model=model), by=.(word)])
setorder(dt_plot, true, model, -N)
dt_plot
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=mean(sentiment)), by=.(word, true, model)])
setorder(dt_plot, true, model, -N)
dt_plot
dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20]
dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
dt_plot <- dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
dt_plot
dt_plot
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
# scale_colour_manual(
#   guide=FALSE,
#   values = c("coral", "lightblue")
# ) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
# scale_colour_manual(
#   guide=FALSE,
#   values = c("coral", "lightblue")
# ) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
# scale_colour_manual(
#   guide=FALSE,
#   values = c("coral", "lightblue")
# ) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=factor(round(sentiment)))) +
geom_text_wordcloud() +
scale_size_area(max_size = 15) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "lightblue")
) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
levels(dt_plot$model) <- c("CNN", "RNN")
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(kableExtra)
library(data.table)
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=mean(sentiment)), by=.(word, true, model)])
setorder(dt_plot, true, model, -N)
dt_plot <- dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
levels(dt_plot$model) <- c("CNN", "RNN")
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=factor(round(sentiment)))) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "darkgreen")
) +
facet_grid(
cols = vars(model),
rows = vars(true)
)
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=mean(sentiment)), by=.(word, true, model)])
setorder(dt_plot, true, model, -N)
dt_plot <- dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
levels(dt_plot$model) <- c("CNN", "RNN")
dt_plot[,sentiment:=factor(round(sentiment))]
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "darkgreen")
) +
facet_grid(
cols = vars(model),
rows = vars(sentiment)
)
stop_words
merge(stop_words,data.table(word=c("food")))
rbind(stop_words,data.table(word=c("food")))
rbind(data.table(stop_words),data.table(word=c("food")))
rbind(data.table(stop_words),data.table(word=c("food")), fill=TRUE)
rbind(data.table(stop_words),data.table(word=c("food", "service, restaurant")), fill=TRUE)
rbind(data.table(stop_words),data.table(word=c("food", "service", "restaurant")), fill=TRUE)
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
stop_words <- rbind(
data.table(stop_words),
data.table(word=c("food", "service", "restaurant")),
fill=TRUE
)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=mean(sentiment)), by=.(word, true, model)])
setorder(dt_plot, true, model, -N)
dt_plot <- dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
levels(dt_plot$model) <- c("CNN", "RNN")
dt_plot[,sentiment:=factor(round(sentiment))]
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "darkgreen")
) +
facet_grid(
cols = vars(model),
rows = vars(sentiment)
)
library(ggwordcloud)
library(tidytext)
library(dplyr)
stop_words <- tidytext::stop_words
stop_words <- rbind(
data.table(stop_words),
data.table(word=c("food", "service", "restaurant")),
fill=TRUE
)
dt_plot <- dt_pred %>%
tidytext::unnest_tokens(word, sentence) %>%
dplyr::anti_join(stop_words)
dt_plot <- melt(
dt_plot,
id.vars = c("word", "true"),
measure.vars = c("pred_cnn", "pred_rnn"),
value.name = "sentiment",
variable.name = "model"
)
dt_plot <- unique(dt_plot[,.(.N, sentiment=mean(sentiment)), by=.(word, true, model)])
setorder(dt_plot, true, model, -N)
dt_plot <- dt_plot[,idx:=1:.N,by=.(true,model)][idx<=20][,idx:=NULL]
levels(dt_plot$model) <- c("CNN", "RNN")
dt_plot[,sentiment:=factor(round(sentiment))]
ggplot(dt_plot, ggplot2::aes(label = word, size = N, colour=sentiment)) +
geom_text_wordcloud() +
scale_size_area(max_size = 5) +
scale_colour_manual(
guide=FALSE,
values = c("coral", "darkgreen")
) +
facet_grid(
cols = vars(model),
rows = vars(sentiment)
)
